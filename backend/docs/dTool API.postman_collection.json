{
  "info": {
    "_postman_id": "173ef936-fc8e-4636-91c7-04926cba0ba5",
    "name": "dTool API",
    "description": "Documenta√ß√£o da API do projeto [dTool](http://tools.ages.pucrs.br/dtool/wiki/wikis/home).\n\n#### Links √∫teis\n\n[üîó P√°gina do projeto no site da AGES](http://www.ages.pucrs.br/?page_id=322)\n\n[üîó P√°gina da wiki do projeto](http://tools.ages.pucrs.br/dtool/wiki/wikis/home)\n\n# Autentica√ß√£o\n\nTodos os endpoints (exceto o de autentica√ß√£o) requerem autentica√ß√£o para verificar o contexto e permiss√£o para executar as a√ß√µes necess√°rias. √â necess√°rio adquirir um token de acesso JWT a partir do endpoint `/auth` (_Autentica√ß√£o (validar c√≥digo de acesso)_), e ent√£o usar esse token no header `Authentication` em todos os requests seguintes:\n\n```\nAuthentication: Bearer access_token\n```\n\nApenas tokens gerados pelo servidor e dentro do prazo de validade s√£o aceitos.\n\n# Endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Relat√≥rios",
      "item": [
        {
          "name": "Gerar relat√≥rio simples",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "afcd3194-26df-43b5-9afa-cf3924e0d393",
                "exec": [
                  "/**",
                  " * Atualiza o token de acesso na vari√°vel de ambiente `_dtool_token`.",
                  " * @param accessCode C√≥digo de acesso usado para autentica√ß√£o.",
                  " */",
                  "const authenticate = (accessCode) => {",
                  "  const path = `${pm.environment.get(\"api_url\")}/auth`;",
                  "",
                  "  const options = {",
                  "    url: path,",
                  "    method: \"POST\",",
                  "    header: { \"Content-Type\": \"application/json\" },",
                  "    body: {",
                  "      mode: \"raw\",",
                  "      raw: JSON.stringify({ code: accessCode }),",
                  "    },",
                  "  };",
                  "",
                  "  pm.sendRequest(options, (err, response) => {",
                  "    pm.environment.set(\"_dtool_token\", response.json().accessToken);",
                  "  });",
                  "};",
                  "",
                  "authenticate(pm.environment.get(\"access_code_time_tracking\"));",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "fa3254b5-4aa9-416c-937b-d13546f59dee",
                "exec": [
                  "",
                  "// ****************************************",
                  "//                 SCHEMA",
                  "// ****************************************",
                  "",
                  "const activityReport = {",
                  "    type: \"object\",",
                  "    properties: {",
                  "        activity: { type: \"integer\" },",
                  "        minimumDuration: { type: \"number\" },",
                  "        medianDuration: { type: \"number\" },",
                  "        maximumDuration: { type: \"number\" }",
                  "    },",
                  "    additionalProperties: false,",
                  "    required: [\"activity\", \"minimumDuration\", \"medianDuration\", \"maximumDuration\"]",
                  "}",
                  "",
                  "const reportsSchema = {",
                  "    type: \"array\",",
                  "    items: activityReport",
                  "}",
                  "",
                  "const errorSchema = {",
                  "    type: \"object\",",
                  "    properties: {",
                  "        code: { type: \"string\" },",
                  "        message: { type: \"string\" }",
                  "    },",
                  "    additionalProperties: false,",
                  "    required: [\"code\", \"message\"]",
                  "}",
                  "",
                  "const schema = {",
                  "    \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
                  "    oneOf: [",
                  "        reportsSchema,",
                  "        errorSchema",
                  "    ]",
                  "}",
                  "",
                  "// ****************************************",
                  "//                 TESTS",
                  "// ****************************************",
                  "",
                  "const response = pm.response.json();",
                  "",
                  "pm.test(\"schema is valid\", () => {",
                  "    pm.expect(tv4.validate(response, schema)).to.be.true;",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "dee688a5-2d40-4761-bd0f-8e951a55c220",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/reports/simple?technology=1&role=4",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "reports",
                "simple"
              ],
              "query": [
                {
                  "key": "technology",
                  "value": "1"
                },
                {
                  "key": "role",
                  "value": "4"
                }
              ]
            },
            "description": "Exporta os tempos de todas as atividades relacionadas a uma ocupa√ß√£o em uma tecnologia.\n\n> Requer autentica√ß√£o com permiss√£o `time-tracking` ou `administration-hospital`.\n\nDevem ser enviados dois par√¢metros via query na URL: identifica√ß√£o da tecnologia (`technology`) e da ocupa√ß√£o (`role`) para os quais se quer obter um relat√≥rio dos tempos m√≠nimo, mediana e m√°ximo por atividade.\n\nO retorno √© uma lista com objetos descrevendo os tempos de cada atividade:\n- `activity`: id da atividade;\n- `minimumDuration`: menor tempo gasto para executar a atividade (em minutos);\n- `medianDuration`: mediana dos tempos gastos para executar a atividade (em minutos);\n- `maximumDuration`: maior tempo gasto para executar a atividade (em minutos); e\n- `lastUpdate`: timestamp da √∫ltima atualiza√ß√£o dos tr√™s campos acima."
          },
          "response": [
            {
              "id": "3708876c-61d9-4c26-964e-b53ecbf8bad2",
              "name": "V√°rias atividades",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/reports/simple?technology=1&role=1",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "reports",
                    "simple"
                  ],
                  "query": [
                    {
                      "key": "technology",
                      "value": "1",
                      "type": "text"
                    },
                    {
                      "key": "role",
                      "value": "1",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"activity\": 2,\n\t\t\"minimumDuration\": 37,\n\t\t\"medianDuration\": 72,\n\t\t\"maximumDuration\": 129,\n\t\t\"lastUpdate\": \"2020-06-03T11:29:43-0300\"\n\t},\n\t{\n        \"activity\": 3,\n        \"minimumDuration\": 67,\n        \"medianDuration\": 350,\n        \"maximumDuration\": 496,\n        \"lastUpdate\": \"2020-06-03T11:29:43-0300\"\n    }\n]"
            },
            {
              "id": "8ebb2a4e-8f08-4dfa-9bd2-c52f89f6bd29",
              "name": "Uma atividade",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/reports/simple?technology=2&role=3",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "reports",
                    "simple"
                  ],
                  "query": [
                    {
                      "key": "technology",
                      "value": "2",
                      "type": "text"
                    },
                    {
                      "key": "role",
                      "value": "3",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"activity\": 2,\n\t\t\"minimumDuration\": 37,\n\t\t\"medianDuration\": 72,\n\t\t\"maximumDuration\": 129,\n\t\t\"lastUpdate\": \"2020-06-03T11:29:43-0300\"\n\t}\n]"
            },
            {
              "id": "d6652d44-c89d-49c5-a7d1-21920e59bac9",
              "name": "Erro - Dados insuficientes",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/reports/simple?role=2",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "reports",
                    "simple"
                  ],
                  "query": [
                    {
                      "key": "role",
                      "value": "2",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"code\": \"bad_request/missing_fields\",\n    \"message\": \"Either 'technology' and 'role' values are required.\"\n}"
            },
            {
              "id": "c28fd820-c345-4a7b-83b4-26eff05a0976",
              "name": "Erro - Sem dados para relat√≥rio",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/reports/simple?technology=3&role=2",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "reports",
                    "simple"
                  ],
                  "query": [
                    {
                      "key": "technology",
                      "value": "3",
                      "type": "text"
                    },
                    {
                      "key": "role",
                      "value": "2",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "X-Powered-By",
                  "value": "Express"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "102"
                },
                {
                  "key": "ETag",
                  "value": "W/\"66-wlH0NDqvwRysMwtv3s0WRT+41GM\""
                },
                {
                  "key": "Date",
                  "value": "Sun, 14 Jun 2020 17:39:31 GMT"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"code\": \"not_found/no_data_found\",\n    \"message\": \"There is no metrics related to this technology and role\"\n}"
            }
          ]
        },
        {
          "name": "Gerar relat√≥rio completo",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "79192ea7-e0cd-4902-ae18-efb3497d2bd3",
                "exec": [
                  "/**",
                  " * Atualiza o token de acesso na vari√°vel de ambiente `_dtool_token`.",
                  " * @param accessCode C√≥digo de acesso usado para autentica√ß√£o.",
                  " */",
                  "const authenticate = (accessCode) => {",
                  "  const path = `${pm.environment.get(\"api_url\")}/auth`;",
                  "",
                  "  const options = {",
                  "    url: path,",
                  "    method: \"POST\",",
                  "    header: { \"Content-Type\": \"application/json\" },",
                  "    body: {",
                  "      mode: \"raw\",",
                  "      raw: JSON.stringify({ code: accessCode }),",
                  "    },",
                  "  };",
                  "",
                  "  pm.sendRequest(options, (err, response) => {",
                  "    pm.environment.set(\"_dtool_token\", response.json().accessToken);",
                  "  });",
                  "};",
                  "",
                  "authenticate(pm.environment.get(\"access_code_administration_hospital\"));",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ef63b3c9-664e-4ebb-b106-3bc1391b6a48",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "9e1b34ad-6004-45b8-9274-b21b37ad6384",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/reports/complete",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "reports",
                "complete"
              ]
            },
            "description": "Exporta todas as informa√ß√µes de um hospital sobre suas tecnologias e execu√ß√µes.\n\n> **Autentica√ß√£o:** `administration-hospital`.\n\nA rota obt√©m informa√ß√µes do hospital do qual construir o relat√≥rio a partir dos dados de autentica√ß√£o, e retorna um arquivo Excel com tr√™s planilhas (abas) para cada tecnologia do hospital:\n- _<nome da tecnologia> - Defini√ß√£o_: cont√©m a matriz de defini√ß√£o da tecnologia, que relaciona atividades e ocupa√ß√µes;\n- _<nome da tecnologia> - Execu√ß√µes_: lista todas as execu√ß√µes de atividades por ocupa√ß√µes de uma tecnologia, com a data/hora de in√≠cio da execu√ß√£o, dura√ß√£o e token √∫nico do dispositivo que originou a execu√ß√£o; e\n- _<nome da tecnologia> - Consolidado_: lista todos os pares (atividade, ocupa√ß√£o), junto das dura√ß√µes m√≠nima, mediana e m√°xima das execu√ß√µes registradas para o par (atividade, ocupa√ß√£o) em quest√£o."
          },
          "response": []
        }
      ],
      "_postman_id": "3c9ac10d-dbba-4cbf-98f9-69fb55a4eeae",
      "description": "Requests para gera√ß√£o de relat√≥rios.\n\nDois tipos de relat√≥rios s√£o suportados:\n- simples: cont√©m apenas os tempos m√≠nimo, mediano e m√°ximo das atividades de um profissional em uma tecnologia; requer a identifica√ß√£o da tecnologia e profissional;\n- completo: cont√©m todos os registros de tempo j√° realizados; usado por gestores de institui√ß√£o e administradores do sistema.",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "15fdee55-9d84-4a30-8d15-16727d4ff162",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "515c7798-6336-4cf3-9b29-501651a0e394",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Tecnologias",
      "item": [
        {
          "name": "Cadastrar/importar tecnologia",
          "_postman_id": "5745c7f8-ab6d-4aa0-8b60-c4bcbaf4c650",
          "protocolProfileBehavior": {
            "disableBodyPruning": true,
            "disabledSystemHeaders": {
              "content-type": true
            }
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/csv",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "AVC 2;Anestesista;Enfermeiro;M√©dico Residente [Residente]\nConsulta;x;;x\nMedir press√£o [Press√£o];;x;x\nPrescri√ß√£o;(se preciso);;x",
              "options": {
                "raw": {
                  "language": "text"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/technologies",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "technologies"
              ]
            },
            "description": "> **Autentica√ß√£o:** apenas gestores (`administration-hospital`).\n\nPermite importar uma tecnologia, associando-a √† institui√ß√£o de sa√∫de relacionada ao token de acesso usado no request. O corpo do request cont√©m o conte√∫do do arquivo com a defini√ß√£o da tecnologia em formato texto (CSV). A resposta cont√©m a lista atualizada das tecnologias cadastradas na institui√ß√£o de sa√∫de do token usado no request.\n\n**Casos de erro:**\n- formato inv√°lido: `400 Bad Request` e corpo da resposta com objeto de erro com c√≥digo `bad_request/invalid_format`;\n- tecnologia repetida: `409 Conflict` e corpo da resposta com objeto de erro com c√≥digo `conflic/technology_already_exists`."
          },
          "response": [
            {
              "id": "14fa25fc-f739-4bbd-b13b-186e72e74348",
              "name": "Tecnologia cadastrada",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"Infarto\",\n\t\"contents\": \";Anestesista;Enfermeiro;M√©dico Residente [Residente]\\nConsulta;x;;x\\nMedir press√£o [Press√£o];;x;x\\nPrescri√ß√£o;(se preciso);;x\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/technologies",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"id\": 1,\n\t\t\"name\": \"AVC\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"name\": \"Cirurgia\"\n\t},\n\t{\n\t\t\"id\": 3,\n\t\t\"name\": \"Infarto\"\n\t}\n]"
            },
            {
              "id": "36105851-a637-4962-94f4-5b9291d677dd",
              "name": "Erro - Formato inv√°lido",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"Infarto\",\n\t\"contents\": \"Anestesista\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/technologies",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n\t\"code\": \"bad_request/invalid_format\",\n\t\"message\": \"the request body is not in a valid format for creating a technology\"\n}"
            },
            {
              "id": "668ea25f-b3f1-4214-b6c5-80150314f436",
              "name": "Erro - Tecnologia j√° criada",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "text/plain",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "AVC;M√©dico Residente\nConsulta;x",
                  "options": {
                    "raw": {
                      "language": "text"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/technologies",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"code\": \"conflic/technology_already_exists\",\n    \"message\": \"another technology with the same name already exists; try again with a different name\"\n}"
            }
          ]
        },
        {
          "name": "Listar tecnologias",
          "_postman_id": "9ca7fa71-4acc-4d0c-ac76-4a918bfb5129",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/technologies",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "technologies"
              ]
            },
            "description": "> **Autentica√ß√£o:** apenas gestores (`administration-hospital`).\n\nObt√©m a lista de tecnologias da institui√ß√£o de sa√∫de de acordo com o token usado no request. Apenas as tecnologias n√£o deletadas s√£o retornadas.\n\n**Casos de erro:** essa rota n√£o retorna erros `4xx`."
          },
          "response": [
            {
              "id": "163521f6-963c-4799-8edb-0a069a0a9b85",
              "name": "Lista de tecnologias",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/technologies",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"id\": 1,\n\t\t\"name\": \"AVC\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"name\": \"Cirurgia\"\n\t},\n\t{\n\t\t\"id\": 3,\n\t\t\"name\": \"Pr√≥tese\"\n\t}\n]"
            }
          ]
        },
        {
          "name": "ND - Excluir tecnologia",
          "_postman_id": "8b068040-d8cb-492d-a6e2-41dac4674bfd",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{api_url}}/technologies/3",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "technologies",
                "3"
              ]
            },
            "description": "> **Autentica√ß√£o:** apenas gestores (`administration-hospital`).\n\nExclui uma tecnologia de uma institui√ß√£o de sa√∫de. A tecnologia n√£o estar√° mais dispon√≠vel para sele√ß√£o durante a contagem de tempos, nem para exporta√ß√£o de dados por gestores, mas ainda estar√° dispon√≠vel aos administradores do sistema (continuar√° a aparecer na exporta√ß√£o de todos os dados da institui√ß√£o e em relat√≥rios).\n\nRetorna a lista das tecnologias remanescentes, que ainda est√£o cadastradas para a institui√ß√£o de sa√∫de relacionada.\n\n**Casos de erro:**\n- tecnologia n√£o encontrada: status `404 Not Found` e lista de tecnologia cadastradas no corpo da resposta."
          },
          "response": [
            {
              "id": "b168218b-6079-4d0e-a63a-84d4083c8be6",
              "name": "Tecnologia exclu√≠da",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/technologies/3",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies",
                    "3"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"id\": 1,\n\t\t\"name\": \"AVC\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"name\": \"Cirurgia\"\n\t}\n]"
            },
            {
              "id": "2cfd0ab1-6eb6-41c6-9ba0-eadd86cd017c",
              "name": "Erro - Tecnologia n√£o encontrada",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/technologies/4",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies",
                    "4"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"id\": 1,\n\t\t\"name\": \"AVC\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"name\": \"Cirurgia\"\n\t},\n\t{\n\t\t\"id\": 3,\n\t\t\"name\": \"Infarto\"\n\t}\n]"
            }
          ]
        }
      ],
      "_postman_id": "02315f80-4dbf-4211-87c5-617f74866335",
      "description": "Requests para gerenciamento de tecnologias: cria√ß√£o, listagem, exclus√£o e download dos dados completos de tecnologias.\n\nAlgumas dessas rotas rotas s√£o de uso exclusivo por gestores e administradores:\n- apenas gestores podem cadastrar, listar e excluir tecnologias ‚Äì `/technologies` (administradores t√™m acesso √†s tecnologias de uma institui√ß√£o baixando todos os dados de uma institui√ß√£o espec√≠fica);\n- apenas administradores podem cadastrar e excluir tecnologias de exemplo ‚Äì `/technologies/samples`.\n\nAs rotas de listagem de tecnologias de exemplo e download de uma tecnologia-exemplo espec√≠fica (`GET /technologies/samples` e `GET /technologies/samples/{{id}}`) n√£o requerem autentica√ß√£o.",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "d960127f-0edd-49d7-ace1-a95776e1fdc3",
            "type": "text/javascript",
            "exec": [
              "/**",
              " * Atualiza o token de acesso na vari√°vel de ambiente `_dtool_token`.",
              " * @param accessCode C√≥digo de acesso usado para autentica√ß√£o.",
              " */",
              "const authenticate = (accessCode) => {",
              "  const path = `${pm.environment.get(\"api_url\")}/auth`;",
              "",
              "  const options = {",
              "    url: path,",
              "    method: \"POST\",",
              "    header: { \"Content-Type\": \"application/json\" },",
              "    body: {",
              "      mode: \"raw\",",
              "      raw: JSON.stringify({ code: accessCode }),",
              "    },",
              "  };",
              "",
              "  pm.sendRequest(options, (err, response) => {",
              "    pm.environment.set(\"_dtool_token\", response.json().accessToken);",
              "  });",
              "};",
              "",
              "authenticate(pm.environment.get(\"access_code_administration_hospital\"));",
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "303217e3-9a10-4998-8687-dd3aed9d7d4d",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Tecnologias-exemplo",
      "item": [
        {
          "name": "ND - Cadastrar tecnologia-exemplo",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "46bb4363-60a4-430a-aaa8-a485efcc6aaa",
                "exec": [
                  "/**",
                  " * Atualiza o token de acesso na vari√°vel de ambiente `_dtool_token`.",
                  " * @param accessCode C√≥digo de acesso usado para autentica√ß√£o.",
                  " */",
                  "const authenticate = (accessCode) => {",
                  "  const path = `${pm.environment.get(\"api_url\")}/auth`;",
                  "",
                  "  const options = {",
                  "    url: path,",
                  "    method: \"POST\",",
                  "    header: { \"Content-Type\": \"application/json\" },",
                  "    body: {",
                  "      mode: \"raw\",",
                  "      raw: JSON.stringify({ code: accessCode }),",
                  "    },",
                  "  };",
                  "",
                  "  pm.sendRequest(options, (err, response) => {",
                  "    pm.environment.set(\"_dtool_token\", response.json().accessToken);",
                  "  });",
                  "};",
                  "",
                  "authenticate(pm.environment.get(\"access_code_administration_app\"));",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "7280f339-ba62-484e-85c7-85fbd61b4d2f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"name\": \"Infarto\",\n\t\"contents\": \";Anestesista;Enfermeiro;M√©dico Residente [Residente]\\nConsulta;x;;x\\nMedir press√£o [Press√£o];;x;x\\nPrescri√ß√£o;(se preciso);;x\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/technologies/samples",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "technologies",
                "samples"
              ]
            },
            "description": "> **Autentica√ß√£o:** administra√ß√£o do sistema (`administration-app`).\n\nPermite cadastrar uma tecnologia-exemplo para o sistema, para que a mesma fique dispon√≠vel para uso pelos gestores das institui√ß√µes do sistema. O corpo do request cont√©m o conte√∫do do arquivo com a defini√ß√£o da tecnologia-exemplo em formato texto (CSV).\n\nA resposta cont√©m a lista atualizada de tecnologias-exemplo cadastradas no sistema.\n\n**Casos de erro:**\n- formato inv√°lido: `400 Bad Request` e c√≥digo `bad_request/invalid_format`;\n- dados insuficientes: `400 Bad Request` e c√≥digo `bad_request/missing_fields`."
          },
          "response": [
            {
              "id": "59b0bbab-d43f-49dd-bf12-6958aea962eb",
              "name": "Tecnologia-exemplo cadastrada",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"Infarto\",\n\t\"contents\": \";Anestesista;Enfermeiro;M√©dico Residente [Residente]\\nConsulta;x;;x\\nMedir press√£o [Press√£o];;x;x\\nPrescri√ß√£o;(se preciso);;x\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/technologies/samples",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies",
                    "samples"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"id\": 1,\n\t\t\"name\": \"AVC\",\n\t\t\"type\": \"CSV\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"name\": \"Cirurgia\",\n\t\t\"type\": \"CSV\"\n\t},\n\t{\n\t\t\"id\": 3,\n\t\t\"name\": \"Infarto\",\n\t\t\"type\": \"CSV\"\n\t}\n]"
            },
            {
              "id": "b47a748c-789e-4afc-bd4a-466c8382ec7b",
              "name": "Erro - Formato inv√°lido",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"Infarto\",\n\t\"contents\": \"Anestesista\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/technologies/samples",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies",
                    "samples"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n\t\"code\": \"bad_request/invalid_format\",\n\t\"message\": \"the request body is not in a valid format for creating a technology sample\"\n}"
            },
            {
              "id": "c07d59ba-162e-46be-b796-c179f551e116",
              "name": "Erro - Dados insuficientes",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"\",\n\t\"contents\": \"\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/technologies/samples",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies",
                    "samples"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"code\": \"bad_request/missing_fields\",\n    \"message\": \"fields 'name' and 'contents' are required and shouldn't be empty\"\n}"
            }
          ]
        },
        {
          "name": "ND - Listar tecnologias-exemplo",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "aee52ffe-44dc-4ff9-9fc6-ec7b2d8215e0",
                "exec": [
                  "/**",
                  " * Atualiza o token de acesso na vari√°vel de ambiente `_dtool_token`.",
                  " * @param accessCode C√≥digo de acesso usado para autentica√ß√£o.",
                  " */",
                  "const authenticate = (accessCode) => {",
                  "  const path = `${pm.environment.get(\"api_url\")}/auth`;",
                  "",
                  "  const options = {",
                  "    url: path,",
                  "    method: \"POST\",",
                  "    header: { \"Content-Type\": \"application/json\" },",
                  "    body: {",
                  "      mode: \"raw\",",
                  "      raw: JSON.stringify({ code: accessCode }),",
                  "    },",
                  "  };",
                  "",
                  "  pm.sendRequest(options, (err, response) => {",
                  "    pm.environment.set(\"_dtool_token\", response.json().accessToken);",
                  "  });",
                  "};",
                  "",
                  "authenticate(pm.environment.get(\"access_code_administration_hospital\"));",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "c3883258-3101-4aa5-a013-16c07ce53219",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/technologies/samples",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "technologies",
                "samples"
              ]
            },
            "description": "Obt√©m a lista de tecnologias-exemplo cadastradas pelos administradores do sistema. A lista retornada cont√©m um objeto relativo √† documenta√ß√£o sobre a importa√ß√£o de tecnologias.\n\nPara obter o conte√∫do de uma tecnologia-exemplo, verifique a documenta√ß√£o da rota _Listar tecnologias-exemplo_ (`GET /technologies/samples/:id`), usando o ID do exemplo desejado.\n\n> **Observa√ß√£o:** √© garantido que pelo menos um elemento ser√° retornado, relativo √† documenta√ß√£o do processo de importa√ß√£o de tecnologias.\n\n**Casos de erro:** essa rota n√£o retorna erros `4xx`."
          },
          "response": [
            {
              "id": "275013d7-9222-4b6e-abd9-c873d96a5468",
              "name": "Lista de tecnologias-exemplo",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/technologies/samples",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies",
                    "samples"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"id\": -1,\n\t\t\"name\": \"Documenta√ß√£o\",\n\t\t\"type\": \"PDF\"\n\t},\n\t{\n\t\t\"id\": 1,\n\t\t\"name\": \"AVC\",\n\t\t\"type\": \"CSV\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"name\": \"Infarto\",\n\t\t\"type\": \"CSV\"\n\t}\n]"
            }
          ]
        },
        {
          "name": "ND - Baixar tecnologia-exemplo",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "78557dec-e010-4d45-a5c1-32d704846ecb",
                "exec": [
                  "/**",
                  " * Atualiza o token de acesso na vari√°vel de ambiente `_dtool_token`.",
                  " * @param accessCode C√≥digo de acesso usado para autentica√ß√£o.",
                  " */",
                  "const authenticate = (accessCode) => {",
                  "  const path = `${pm.environment.get(\"api_url\")}/auth`;",
                  "",
                  "  const options = {",
                  "    url: path,",
                  "    method: \"POST\",",
                  "    header: { \"Content-Type\": \"application/json\" },",
                  "    body: {",
                  "      mode: \"raw\",",
                  "      raw: JSON.stringify({ code: accessCode }),",
                  "    },",
                  "  };",
                  "",
                  "  pm.sendRequest(options, (err, response) => {",
                  "    pm.environment.set(\"_dtool_token\", response.json().accessToken);",
                  "  });",
                  "};",
                  "",
                  "authenticate(pm.environment.get(\"access_code_administration_hospital\"));",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "3e55ff37-64ec-4d64-9b49-c294778d852c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/technologies/samples/3",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "technologies",
                "samples",
                "3"
              ]
            },
            "description": "Fazer o download de uma tecnologia-exemplo a partir do seu ID (obtido usando o request _Listar tecnologias-exemplo_, `GET /technologies/samples`). Use essa rota tamb√©m para realizar o download da documenta√ß√£o sobre o cadastro/importa√ß√£o de tecnologias.\n\nO header `Content-Type` da resposta varia de acordo com o formato do exemplo.\n\n**Casos de erro:**\n- exemplo n√£o encontrado: `404 Not Found` e c√≥digo `not_found`."
          },
          "response": [
            {
              "id": "73b9c61d-29df-4e0e-9890-9fc409da45a8",
              "name": "Conte√∫do de tecnologia-exemplo",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/technologies/samples/3",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies",
                    "samples",
                    "3"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/csv",
                  "description": "",
                  "type": "text"
                },
                {
                  "key": "Content-Disposition",
                  "value": "attachment;filename=AVC.csv",
                  "description": "",
                  "type": "text"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": ";Anestesista;Enfermeiro;M√©dico Residente [Residente]\nConsulta;x;;x\nMedir press√£o [Press√£o];;x;x\nPrescri√ß√£o;(se preciso);;x\n"
            },
            {
              "id": "d323f0b5-3208-4b4c-9bb0-d20c161d0663",
              "name": "Erro - Tecnologia-exemplo n√£o encontrada",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/technologies/samples/9",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies",
                    "samples",
                    "9"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n\t\"code\": \"not_found\",\n\t\"message\": \"the provided id doesn't represent a technology sample\"\n}"
            }
          ]
        },
        {
          "name": "ND - Excluir tecnologia-exemplo",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "9e5253d2-f53b-45a3-b7df-c6a6eeb1e1be",
                "exec": [
                  "/**",
                  " * Atualiza o token de acesso na vari√°vel de ambiente `_dtool_token`.",
                  " * @param accessCode C√≥digo de acesso usado para autentica√ß√£o.",
                  " */",
                  "const authenticate = (accessCode) => {",
                  "  const path = `${pm.environment.get(\"api_url\")}/auth`;",
                  "",
                  "  const options = {",
                  "    url: path,",
                  "    method: \"POST\",",
                  "    header: { \"Content-Type\": \"application/json\" },",
                  "    body: {",
                  "      mode: \"raw\",",
                  "      raw: JSON.stringify({ code: accessCode }),",
                  "    },",
                  "  };",
                  "",
                  "  pm.sendRequest(options, (err, response) => {",
                  "    pm.environment.set(\"_dtool_token\", response.json().accessToken);",
                  "  });",
                  "};",
                  "",
                  "authenticate(pm.environment.get(\"access_code_administration_app\"));",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "8dd69be5-f7fc-49ad-b2b2-07ea15724a9a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{api_url}}/technologies/samples/3",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "technologies",
                "samples",
                "3"
              ]
            },
            "description": "> **Autentica√ß√£o:** administra√ß√£o do sistema (`administration-app`).\n\nExclui uma tecnologia-exemplo do sistema, impedindo o seu uso por gestores para a cria√ß√£o de novas tecnologias. O exemplo n√£o estar√° mais dispon√≠vel para download por gestores. **O exemplo √© deletado do banco de dados.**\n\n**Observa√ß√£o:** n√£o √© poss√≠vel excluir a documenta√ß√£o sobre importa√ß√£o de tecnologias. Para atualiz√°-la, √© preciso modificar o arquivo PDF referenciado pelo c√≥digo do servidor (mais detalhes na [documenta√ß√£o do backend](http://tools.ages.pucrs.br/dtool/backend) ou [do sistema](http://tools.ages.pucrs.br/dtool/wiki/wikis/home)).\n\nRetorna a lista das tecnologias-exemplo remanescentes, que ainda est√£o cadastradas no sistema.\n\n**Casos de erro:**\n- tecnologia-exemplo n√£o encontrada: status `404 Not Found` e lista de tecnologias-exemplo cadastradas no corpo da resposta;\n- exclus√£o n√£o permitida (ocorre ao tentar deletar a documenta√ß√£o): status `405 Method Not Allowed` e c√≥digo `not_allowed/documentation`."
          },
          "response": [
            {
              "id": "7d36f372-10bc-4da2-97c3-bf2635d0bf5c",
              "name": "Tecnologia-exemplo exclu√≠da",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/technologies/samples/3",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies",
                    "samples",
                    "3"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"id\": 1,\n\t\t\"name\": \"AVC\",\n\t\t\"type\": \"CSV\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"name\": \"Infarto\",\n\t\t\"type\": \"CSV\"\n\t}\n]"
            },
            {
              "id": "ff4c318a-f625-46e2-94bd-25c6765f2f31",
              "name": "Erro - Exemplo n√£o encontrado",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/technologies/samples/4",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies",
                    "samples",
                    "4"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"id\": 1,\n\t\t\"name\": \"AVC\",\n\t\t\"type\": \"CSV\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"name\": \"Infarto\",\n\t\t\"type\": \"CSV\"\n\t},\n\t{\n\t\t\"id\": 3,\n\t\t\"name\": \"Pr√≥tese\",\n\t\t\"type\": \"CSV\"\n\t}\n]"
            },
            {
              "id": "0e499dc2-de8b-4dc4-9bc3-319a2131b704",
              "name": "Erro - Exclus√£o n√£o permitida (documenta√ß√£o)",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/technologies/samples/-1",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "technologies",
                    "samples",
                    "-1"
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n\t\"code\": \"not_allowed/documentation\",\n\t\"message\": \"the documentation cannot be deleted; check the docs on how to update it\"\n}"
            }
          ]
        }
      ],
      "_postman_id": "6c0ffc0f-6696-45d3-a1a8-1dbc7e8aa423",
      "description": "Tecnologias-exemplo s√£o templates de arquivos de defini√ß√£o de tecnologia que podem ser usados por gestores para entender o formato do arquivo com a defini√ß√£o de uma tecnologia, suas atividades e ocupa√ß√µes, de forma a facilitar o uso do sistema.\n\nApenas os administradores do sistema podem cadastrar e excluir tecnologias-exemplo, e qualquer usu√°rio pode acessar as tecnologias-exemplo cadastradas (leia-se requests `GET` n√£o precisam ser autenticados).",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "51c3271f-2fec-4206-97b6-9eeb9033f9a1",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "b55bc4fb-e7b6-46f1-a5fe-f097ce553442",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Institui√ß√µes de sa√∫de",
      "item": [
        {
          "name": "Cadastrar institui√ß√£o de sa√∫de",
          "_postman_id": "ebb55ad5-3f16-4057-b7f9-4b2c2cda8dfa",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"institutionName\": \"Hospital S√£o Lucas\",\n\t\"administrationEmail\": \"hsl@pucrs.br\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/health_institutions",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "health_institutions"
              ]
            },
            "description": "> **Autentica√ß√£o:** administra√ß√£o do sistema (`administration-app`).\n\nPermite cadastrar uma institui√ß√£o de sa√∫de no sistema, criado c√≥digos de contagem de tempo e gest√£o e enviando-os para o e-mail da gest√£o da institui√ß√£o. A resposta cont√©m os c√≥digos de acesso ao app (`timeTrackingCode` e `administrationCode`).\n\nSe n√£o for poss√≠vel enviar o e-mail com os c√≥digos de acesso, a resposta ter√° status `201 Created` e um objeto de erro com c√≥digo `internal/email-not-sent` (ver exemplo _Falha ao enviar e-mail com c√≥digos_).\n\n**Casos de erro:**\n- e-mail inv√°lido: `400 Bad Request` e c√≥digo `bad_request/invalid_format`;\n- dados insuficientes: `400 Bad Request` e c√≥digo `bad_request/missing_fields`."
          },
          "response": [
            {
              "id": "a4443f09-2624-48b8-b635-eab59eb6bd1f",
              "name": "Institui√ß√£o cadastrada",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"institutionName\": \"Hospital S√£o Lucas\",\n\t\"administrationEmail\": \"hsl@pucrs.br\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/health_institutions",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "health_institutions"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"timeTrackingCode\": \"0WFE\",\n    \"administrationCode\": \"9WHS\"\n}"
            },
            {
              "id": "d553ac69-0f61-4711-ab8a-e9a389496745",
              "name": "Erro - Dados insuficientes",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"institutionName\": \"\",\n\t\"administrationEmail\": \"hsl@pucrs.br\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/health_institutions",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "health_institutions"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"code\": \"bad_request/missing_fields\",\n    \"message\": \"fields 'institutionName' and 'administrationEmail' are required and shouldn't be empty\"\n}"
            },
            {
              "id": "2fcec233-a0ae-4a7d-81b1-6cd214484e71",
              "name": "Erro - E-mail inv√°lido",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"institutionName\": \"Hospital S√£o Lucas\",\n\t\"administrationEmail\": \"hsl@pucrs.b\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/health_institutions",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "health_institutions"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"code\": \"bad_request/invalid_format\",\n    \"message\": \"field 'administrationEmail' is not valid\"\n}"
            },
            {
              "id": "bbee837e-157d-42aa-b787-b190da77881d",
              "name": "Falha ao enviar e-mail com c√≥digos",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"institutionName\": \"Hospital S√£o Lucas\",\n\t\"administrationEmail\": \"hsl@pucrs.br\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{api_url}}/health_institutions",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "health_institutions"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"timeTrackingCode\": \"0WFE\",\n    \"administrationCode\": \"9WHS\",\n    \"error\": {\n    \t\"code\": \"internal/email-not-sent\",\n    \t\"message\": \"failed to send e-mail with access codes\"\n    }\n}"
            }
          ]
        },
        {
          "name": "Listar institui√ß√µes de sa√∫de",
          "_postman_id": "a74b4c49-88c2-46d6-a5b4-1b64a991657a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/health_institutions",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "health_institutions"
              ]
            },
            "description": "> **Autentica√ß√£o:** administra√ß√£o do sistema (`administration-app`).\n\nObt√©m a lista de institui√ß√µes de sa√∫de cadastradas no sistema, com seu nome e c√≥digos de acesso.\n\nInstitui√ß√µes deletadas n√£o s√£o retornadas.\n\n**Casos de erro:** essa rota n√£o retorna erros `4xx`."
          },
          "response": [
            {
              "id": "4b98b212-f03c-4db7-8575-a937962100cb",
              "name": "Lista de institui√ß√µes",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/health_institutions",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "health_institutions"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"id\": 1,\n\t\t\"institutionName\": \"Hospital S√£o Lucas\",\n\t\t\"timeTrackingCode\": \"HSLC\",\n\t\t\"administrationCode\": \"HSLG\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"institutionName\": \"Hospital Moinhos de Vento\",\n\t\t\"timeTrackingCode\": \"HMVC\",\n\t\t\"administrationCode\": \"HMVG\"\n\t},\n\t{\n\t\t\"id\": 3,\n\t\t\"institutionName\": \"Hospital Divina Provid√™ncia\",\n\t\t\"timeTrackingCode\": \"HDPC\",\n\t\t\"administrationCode\": \"HDPG\"\n\t}\n]"
            }
          ]
        },
        {
          "name": "ND - Excluir institui√ß√£o de sa√∫de",
          "_postman_id": "5a2f7026-7ac6-43ad-ae16-f65c8351a29e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{api_url}}/health_institutions/3",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "health_institutions",
                "3"
              ]
            },
            "description": "> **Autentica√ß√£o:** administra√ß√£o do sistema (`administration-app`).\n\nExclui uma institui√ß√£o de sa√∫de **permanentemente**. A institui√ß√£o n√£o estar√° mais dispon√≠vel contagem de tempos, opera√ß√µes de gest√£o (CRUD de tecnologias), ou exporta√ß√£o de relat√≥rios de qualquer natureza. **Todas as tecnologias, atividades, ocupa√ß√µes e execu√ß√µes s√£o deletadas do banco de dados.**\n\nRetorna a lista das institui√ß√µes remanescentes, que ainda est√£o cadastradas no sistema.\n\n**Casos de erro:**\n- institui√ß√£o n√£o encontrada: status `404 Not Found` e lista de institui√ß√µes cadastradas no corpo da resposta."
          },
          "response": [
            {
              "id": "3a83b0d9-f58b-4110-bd90-cd6c43907f17",
              "name": "Institui√ß√£o exclu√≠da",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/health_institutions/3",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "health_institutions",
                    "3"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"id\": 1,\n\t\t\"institutionName\": \"Hospital S√£o Lucas\",\n\t\t\"timeTrackingCode\": \"HSLC\",\n\t\t\"administrationCode\": \"HSLG\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"institutionName\": \"Hospital Moinhos de Vento\",\n\t\t\"timeTrackingCode\": \"HMVC\",\n\t\t\"administrationCode\": \"HMVG\"\n\t}\n]"
            },
            {
              "id": "3dac3096-9609-4438-b2fb-7aa1c463ab54",
              "name": "Erro - Institui√ß√£o n√£o encontrada",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{api_url}}/health_institutions/4",
                  "host": [
                    "{{api_url}}"
                  ],
                  "path": [
                    "health_institutions",
                    "4"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "[\n\t{\n\t\t\"id\": 1,\n\t\t\"institutionName\": \"Hospital S√£o Lucas\",\n\t\t\"timeTrackingCode\": \"HSLC\",\n\t\t\"administrationCode\": \"HSLG\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"institutionName\": \"Hospital Moinhos de Vento\",\n\t\t\"timeTrackingCode\": \"HMVC\",\n\t\t\"administrationCode\": \"HMVG\"\n\t},\n\t{\n\t\t\"id\": 3,\n\t\t\"institutionName\": \"Hospital Divina Provid√™ncia\",\n\t\t\"timeTrackingCode\": \"HDPC\",\n\t\t\"administrationCode\": \"HDPG\"\n\t}\n]"
            }
          ]
        }
      ],
      "_postman_id": "bbd45fc0-971e-4584-b4b9-cacb31af5109",
      "description": "Requests para gerenciamento de institui√ß√µes de sa√∫de: cria√ß√£o, listagem, exclus√£o e download dos dados completos (tecnologias e execu√ß√µes).\n\nTodas as rotas s√£o de uso exclusivo por administradores do sistema, com o uso de um token com permiss√£o `administration-app`.",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "0bfbc7cc-b8d1-462f-a644-6e9d5991f729",
            "type": "text/javascript",
            "exec": [
              "/**",
              " * Atualiza o token de acesso na vari√°vel de ambiente `_dtool_token`.",
              " * @param accessCode C√≥digo de acesso usado para autentica√ß√£o.",
              " */",
              "const authenticate = (accessCode) => {",
              "  const path = `${pm.environment.get(\"api_url\")}/auth`;",
              "",
              "  const options = {",
              "    url: path,",
              "    method: \"POST\",",
              "    header: { \"Content-Type\": \"application/json\" },",
              "    body: {",
              "      mode: \"raw\",",
              "      raw: JSON.stringify({ code: accessCode }),",
              "    },",
              "  };",
              "",
              "  pm.sendRequest(options, (err, response) => {",
              "    pm.environment.set(\"_dtool_token\", response.json().accessToken);",
              "  });",
              "};",
              "",
              "authenticate(pm.environment.get(\"access_code_administration_app\"));",
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "a4fe2d7c-097f-40e4-a79e-6d62461584d7",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Autentica√ß√£o (validar c√≥digo de acesso)",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "eaf3a350-2775-4c7c-8c61-2dff01a2da1c",
            "exec": [
              "",
              "// ****************************************",
              "//                 SCHEMA",
              "// ****************************************",
              "",
              "const activity = {",
              "    type: \"object\",",
              "    properties: {",
              "        id: { type: \"integer\" },",
              "        name: { type: \"string\" },",
              "        roles: {",
              "            type: \"array\",",
              "            items: { type: \"integer\" }",
              "        }",
              "    },",
              "    additionalProperties: false,",
              "    required: [\"id\", \"name\", \"roles\"]",
              "}",
              "",
              "const technology = {",
              "    type: \"object\",",
              "    properties: {",
              "        id: { type: \"integer\" },",
              "        name: { type: \"string\" },",
              "        activities: {",
              "            type: \"array\",",
              "            items: activity",
              "        }",
              "    },",
              "    additionalProperties: false,",
              "    required: [\"id\", \"name\"],",
              "}",
              "",
              "const institution = {",
              "    type: \"object\",",
              "    properties: {",
              "        id: { type: \"integer\" },",
              "        name: { type: \"string\" }",
              "    },",
              "    additionalProperties: false,",
              "    required: [\"name\"]",
              "}",
              "",
              "const role = {",
              "    type: \"object\",",
              "    properties: {",
              "        id: { type: \"integer\" },",
              "        name: { type: \"string\" }",
              "    },",
              "    additionalProperties: false,",
              "    required: [\"id\", \"name\"]",
              "}",
              "",
              "const timeTrackingManagementSchema = {",
              "    type: \"object\",",
              "    properties: {",
              "        permission: { enum: [\"time-tracking\", \"administration-hospital\"] },",
              "        accessToken: { type: \"string\" },",
              "        institution: institution,",
              "        roles: { type: \"array\", items: role },",
              "        technologies: { type: \"array\", items: technology }",
              "    },",
              "    additionalProperties: false,",
              "    required: [\"permission\", \"accessToken\", \"institution\", \"technologies\"]",
              "}",
              "",
              "const adminSchema = {",
              "    type: \"object\",",
              "    properties: {",
              "        permission: { enum: [\"administration-app\"] },",
              "        accessToken: { type: \"string\" },",
              "        institutions: { type: \"array\", items: institution }",
              "    },",
              "    additionalProperties: false,",
              "    required: [\"permission\", \"accessToken\", \"institutions\"]",
              "}",
              "",
              "const errorSchema = {",
              "    type: \"object\",",
              "    properties: {",
              "        code: { type: \"string\" },",
              "        message: { type: \"string\" }",
              "    },",
              "    additionalProperties: false,",
              "    required: [\"code\", \"message\"]",
              "}",
              "",
              "const schema = {",
              "    \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
              "    oneOf: [",
              "        timeTrackingManagementSchema,",
              "        adminSchema,",
              "        errorSchema",
              "    ]",
              "}",
              "",
              "// ****************************************",
              "//                 TESTS",
              "// ****************************************",
              "",
              "const response = pm.response.json();",
              "",
              "pm.test(\"schema is valid\", () => {",
              "    pm.expect(tv4.validate(response, schema)).to.be.true;",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "af9e34ce-86b0-41f2-936c-471021972048",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "29d67318-66c5-440e-9b2e-3a4d8a02f623",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"code\": \"{{access_code_time_tracking}}\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{api_url}}/auth",
          "host": [
            "{{api_url}}"
          ],
          "path": [
            "auth"
          ]
        },
        "description": "Valida um c√≥digo de acesso ao aplicativo, indicando o tipo de c√≥digo:\n- administra√ß√£o do app;\n- administra√ß√£o de um hospital;\n- contagem de tempo de um hospital.\n\nO retorno cont√©m:\n- o n√≠vel de permiss√£o do c√≥digo (`permission`): `time-tracking`, `administration-hospital` ou `administration-app`;\n- um token JWT a ser usado em todos os outros requests para a API (como autentica√ß√£o _Bearer_): `accessToken`;\n- informa√ß√µes da institui√ß√£o: ocupa√ß√µes, tecnologias e atividades (se for um c√≥digo relacionado a uma institui√ß√£o);\n- informa√ß√µes das institui√ß√µes cadastradas (se for um c√≥digo de administra√ß√£o).\n\nCasos de erro:\n- sem c√≥digo: `400 Bad Request` e corpo da resposta com objeto de erro com c√≥digo `bad_request/missing_fields`;\n- c√≥digo n√£o encontrado: `404 Not Found` e corpo da resposta com objeto de erro com c√≥digo `not_found`."
      },
      "response": [
        {
          "id": "0741163f-cb43-45c6-bae1-96f2b6fc8f00",
          "name": "Erro - Sem c√≥digo",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/auth",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "37"
            },
            {
              "key": "ETag",
              "value": "W/\"25-oxk1mc7c4fqUOfSE0+uV3Bz/r6E\""
            },
            {
              "key": "Date",
              "value": "Wed, 08 Apr 2020 22:52:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"code\": \"bad_request/missing_fields\",\n    \"message\": \"field 'code' is required\"\n}"
        },
        {
          "id": "1fa5da24-7813-4563-a9ec-08af0b642427",
          "name": "Contagem de tempos",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"code\": \"HSLC\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/auth",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": null,
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"permission\": \"time-tracking\",\n    \"institution\": {\n        \"name\": \"Hospital S√£o Lucas\"\n    },\n    \"roles\": [\n        {\n            \"id\": 1,\n            \"name\": \"Medico Intensivista\",\n            \"activities\": [2]\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Medico Anestesiologista\",\n            \"activities\": [1, 2]\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Medico Neurocirurgi√£o\",\n            \"activities\": [2, 3]\n        }\n    ],\n    \"technologies\": [\n    \t{\n    \t\t\"id\": 1,\n    \t\t\"name\": \"AVC\",\n    \t\t\"activities\": [\n    \t\t\t{\n    \t\t\t\t\"id\": 1,\n    \t\t\t\t\"name\": \"Medir press√£o\",\n    \t\t\t\t\"roles\": [2]\n    \t\t\t},\n    \t\t\t{\n    \t\t\t\t\"id\": 2,\n    \t\t\t\t\"name\": \"Consulta\",\n    \t\t\t\t\"roles\": [1, 2, 3]\n    \t\t\t}\n    \t\t]\n    \t},\n    \t{\n    \t\t\"id\": 2,\n    \t\t\"name\": \"Cirurgia\",\n    \t\t\"activities\": [\n    \t\t\t{\n    \t\t\t\t\"id\": 3,\n    \t\t\t\t\"name\": \"Consulta\",\n    \t\t\t\t\"roles\": [3]\n    \t\t\t}\n    \t\t]\n    \t}\n    ],\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NDb2RlIjoiMTIzNCIsInBlcm1pc3Npb25zIjpbInRpbWUtdHJhY2tpbmciXSwiaWF0IjoxNTg3MDExMzgzLCJuYmYiOjE1ODcwMTEzODMsImV4cCI6MTU4NzAxNDk4MywiYXVkIjoiYnIuY29tLmR0b29sLmFwcCIsImlzcyI6ImJyLmNvbS5kdG9vbC5hcGkiLCJzdWIiOiIxMjM0In0.qrg4IKjIf8kP4ZR3cL7hZzUPRtMpznNi-6zxkUJsRco\"\n}"
        },
        {
          "id": "21c085dd-49aa-462d-b529-32381e44fecc",
          "name": "Erro - C√≥digo n√£o encontrado",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"code\": \"AAAA\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/auth",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "status": "Not Found",
          "code": 404,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "20"
            },
            {
              "key": "ETag",
              "value": "W/\"14-KK80Et5iWQlOUl91MVMsaJ4NvB4\""
            },
            {
              "key": "Date",
              "value": "Wed, 08 Apr 2020 22:55:01 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"code\": \"not_found\",\n    \"message\": \"the provided code doesn't represent an active health institution\"\n}"
        },
        {
          "id": "2bbca0a6-2215-44f5-ad0e-fde35a3cad0d",
          "name": "Gest√£o do hospital",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"code\": \"4321\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/auth",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "414"
            },
            {
              "key": "ETag",
              "value": "W/\"19e-CSUKa6IxEtjmNf2TvlXliHZDY0c\""
            },
            {
              "key": "Date",
              "value": "Thu, 23 Apr 2020 04:25:01 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"permission\": \"administration-hospital\",\n    \"institution\": {\n        \"name\": \"Hospital S√£o Lucas\"\n    },\n    \"technologies\": [\n    \t{\n    \t\t\"id\": 1,\n    \t\t\"name\": \"AVC\"\n    \t},\n    \t{\n    \t\t\"id\": 2,\n    \t\t\"name\": \"Cirurgia\"\n    \t}\n    ],\n    \"samples\": [\n    \t{\n    \t\t\"id\": 1,\n    \t\t\"name\": \"Documenta√ß√£o\"\n    \t},\n    \t{\n    \t\t\"id\": 2,\n    \t\t\"name\": \"AVC\"\n    \t}\n    ],\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NDb2RlIjoiNDMyMSIsInBlcm1pc3Npb25zIjpbImFkbWluaXN0cmF0aW9uLWhvc3BpdGFsIl0sImlhdCI6MTU4NzYxNTk4MCwibmJmIjoxNTg3NjE1OTgwLCJleHAiOjE1ODc2MTk1ODAsImF1ZCI6ImJyLmNvbS5kdG9vbC5hcHAiLCJpc3MiOiJici5jb20uZHRvb2wuYXBpIiwic3ViIjoiNDMyMSJ9.7R3l8BzIeRys32vz5iMIx0i8P9DqrN7hFjiek7pSloA\"\n}"
        },
        {
          "id": "dcaf59e0-d48b-48ec-b946-8d99d746f3d1",
          "name": "Administra√ß√£o do app",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"code\": \"2L0I\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/auth",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "437"
            },
            {
              "key": "ETag",
              "value": "W/\"1b5-UiLCvYA/g4JtM3/usXk37sHsioA\""
            },
            {
              "key": "Date",
              "value": "Thu, 23 Apr 2020 04:26:20 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"permission\": \"administration-app\",\n    \"institutions\": [\n    \t{\n    \t\t\"id\": 1,\n    \t\t\"name\": \"Hospital S√£o Lucas\"\n    \t},\n    \t{\n    \t\t\"id\": 2,\n    \t\t\"name\": \"Hospital Moinhos de Vento\"\n    \t}\n    ],\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NDb2RlIjoiMkwwSSIsInBlcm1pc3Npb25zIjpbImFkbWluaXN0cmF0aW9uLWFwcCJdLCJpYXQiOjE1ODc2MTYwODksIm5iZiI6MTU4NzYxNjA4OSwiZXhwIjoxNTg3NjE5Njg5LCJhdWQiOiJici5jb20uZHRvb2wuYXBwIiwiaXNzIjoiYnIuY29tLmR0b29sLmFwaSIsInN1YiI6IjJMMEkifQ.joIKEolicKpi27josgK_cQXIT8reqrzBVGu1M_OnwFM\"\n}"
        }
      ]
    },
    {
      "name": "Registrar execu√ß√£o de atividades",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "1830732e-eb24-4c64-a29f-71f2d0945ae0",
            "exec": [
              "/**",
              " * Atualiza o token de acesso na vari√°vel de ambiente `_dtool_token`.",
              " * @param accessCode C√≥digo de acesso usado para autentica√ß√£o.",
              " */",
              "const authenticate = (accessCode) => {",
              "  const path = `${pm.environment.get(\"api_url\")}/auth`;",
              "",
              "  const options = {",
              "    url: path,",
              "    method: \"POST\",",
              "    header: { \"Content-Type\": \"application/json\" },",
              "    body: {",
              "      mode: \"raw\",",
              "      raw: JSON.stringify({ code: accessCode }),",
              "    },",
              "  };",
              "",
              "  pm.sendRequest(options, (err, response) => {",
              "    pm.environment.set(\"_dtool_token\", response.json().accessToken);",
              "  });",
              "};",
              "",
              "authenticate(pm.environment.get(\"access_code_time_tracking\"));",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "3eb750dd-5c99-4501-929b-0e906b0cafd4",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"deviceToken\": \"qwertyuiopasdfghjklzxcvbnm1234567890\",\n\t\"executions\": [\n\t\t{\n\t\t\t\"activityId\": 14,\n\t\t\t\"roleId\": 4,\n\t\t\t\"timestamp\": \"2020-04-04T14:20:37-0300\",\n\t\t\t\"endDate\": \"2020-04-04T18:20:37-0300\",\n\t\t\t\"duration\": 97\n\t\t},\n\t\t{\n\t\t\t\"activityId\": 3,\n\t\t\t\"roleId\": 9,\n\t\t\t\"timestamp\": \"2020-04-04T18:00:54-0300\",\n\t\t\t\"endDate\": \"2020-04-04T20:00:54-0300\",\n\t\t\t\"duration\": 326\n\t\t}\n\t]\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{api_url}}/executions",
          "host": [
            "{{api_url}}"
          ],
          "path": [
            "executions"
          ]
        },
        "description": "Permite registrar a execu√ß√£o de m√∫ltiplas atividades em um √∫nico request.\n\n> Requer autentica√ß√£o com permiss√£o `time-tracking`.\n\nDeve ser passado um payload JSON contendo um objeto com a identifica√ß√£o do dispositivo que fez a leitura (`deviceToken`) e uma lista de registros de execu√ß√£o (`executions`), onde cada objeto deve conter as seguintes informa√ß√µes:\n- id da atividade executada (`activityId`);\n- id da ocupa√ß√£o do funcion√°rio que executou a atividade (`roleId`);\n- timestamp da data de in√≠cio da execu√ß√£o, no padr√£o [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) (`timestamp`);\n- timestamp da data final da execu√ß√£o, no padr√£o [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) (`timestamp`); e\n- dura√ß√£o da atividade, em segundos (`duration`)."
      },
      "response": [
        {
          "id": "1bcfa173-e4a5-4b8b-92ce-60285957f2ab",
          "name": "V√°rias execu√ß√µes",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"deviceToken\": \"qwertyuiopasdfghjklzxcvbnm1234567890\",\n\t\"executions\": [\n\t\t{\n\t\t\t\"activityId\": 14,\n\t\t\t\"roleId\": 4,\n\t\t\t\"timestamp\": \"2020-04-04T14:20:37-0300\",\n\t\t\t\"endDate\": \"2020-04-04T18:20:37-0300\",\n\t\t\t\"duration\": 97\n\t\t},\n\t\t{\n\t\t\t\"activityId\": 3,\n\t\t\t\"roleId\": 9,\n\t\t\t\"timestamp\": \"2020-04-04T18:00:54-0300\",\n\t\t\t\"endDate\": \"2020-04-04T20:00:54-0300\",\n\t\t\t\"duration\": 326\n\t\t}\n\t]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/executions",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "executions"
              ]
            }
          },
          "status": "Created",
          "code": 201,
          "_postman_previewlanguage": null,
          "header": null,
          "cookie": [],
          "responseTime": null,
          "body": null
        },
        {
          "id": "6263e4d5-8cb9-44a8-811a-becc082cf05a",
          "name": "Erro - Sem deviceToken",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"executions\": [\n\t\t{\n\t\t\t\"activityId\": 14,\n\t\t\t\"roleId\": 4,\n\t\t\t\"timestamp\": \"2020-04-04T14:20:37-0300\",\n\t\t\t\"endDate\": \"2020-04-04T18:20:37-0300\",\n\t\t\t\"duration\": 97\n\t\t},\n\t\t{\n\t\t\t\"activityId\": 3,\n\t\t\t\"roleId\": 9,\n\t\t\t\"timestamp\": \"2020-04-04T18:00:54-0300\",\n\t\t\t\"endDate\": \"2020-04-04T20:00:54-0300\",\n\t\t\t\"duration\": 326\n\t\t}\n\t]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/executions",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "executions"
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "json",
          "header": null,
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"code\": \"bad_request/missing_fields\",\n    \"message\": \"fields 'deviceToken' and 'executions' are required, and there should be at least one execution\"\n}"
        },
        {
          "id": "cb91ceb7-5eb5-4b0c-8d29-a1939c448f9b",
          "name": "Erro - Nenhuma execu√ß√£o",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"deviceToken\": \"qwertyuiopasdfghjklzxcvbnm1234567890\",\n\t\"executions\": []\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/executions",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "executions"
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self'"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "154"
            },
            {
              "key": "Date",
              "value": "Thu, 23 Apr 2020 04:45:53 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"code\": \"bad_request/missing_fields\",\n    \"message\": \"fields 'deviceToken' and 'executions' are required, and there should be at least one execution\"\n}"
        },
        {
          "id": "87ff72f3-aded-423f-a76f-710dd75097d2",
          "name": "Erro - Dados insuficientes",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"deviceToken\": \"qwertyuiopasdfghjklzxcvbnm1234567890\",\n\t\"executions\": [\n\t\t{\n\t\t\t\"roleId\": 1,\n\t\t\t\"timestamp\": \"2020-04-04T14:20:37-0300\",\n\t\t\t\"endDate\": \"2020-04-04T18:20:37-0300\",\n\t\t\t\"duration\": 97\n\t\t},\n\t\t{\n\t\t\t\"activityId\": 1,\n\t\t\t\"roleId\": 16,\n\t\t\t\"timestamp\": \"2020-04-04T18:00:54-0300\",\n\t\t\t\"endDate\": \"2020-04-04T20:00:54-0300\",\n\t\t\t\"duration\": 326\n\t\t}\n\t]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{api_url}}/executions",
              "host": [
                "{{api_url}}"
              ],
              "path": [
                "executions"
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self'"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "154"
            },
            {
              "key": "Date",
              "value": "Thu, 23 Apr 2020 04:45:53 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "cookie": [],
          "responseTime": null,
          "body": "{\n    \"code\": \"bad_request/missing_fields\",\n    \"message\": \"fields 'activityId', 'roleId', 'timestamp', `endDate` and 'duration' are required on all executions\"\n}"
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{_dtool_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "4bac84cb-54a9-4a69-964f-8e12727c2ef8",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "f18d8b0f-37f1-4598-889d-c6a64ece197c",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}